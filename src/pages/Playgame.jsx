import React, { useState, useRef } from 'react'
import { Button, Input, Alert, Slider } from 'antd';
import { Link } from 'react-router-dom';

function Playgame() {
    const [content, setContent] = useState('home');
    const [answer, setAnswer] = useState('');
    const [error, setError] = useState(false);
    const [volume, setVolume] = useState(0.5);
    const audioRef = useRef(null);
    const handleVolumeChange = (value) => {
        setVolume(value);
        if (audioRef.current) {
            audioRef.current.volume = value;
        }
    };
    const handle = () => {
        if (answer === 'PTopSudLor') {
            setContent('stepfinal');
        } else {
            setError(true);
        }
    };

    const Content = () => {
        switch (content) {
            case 'step1':
                return (
                    <>
                        <h1>‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏´‡∏£‡∏≠‡∏Å ü§£ ü§£ ü§£  </h1>
                        <Button style={{margin:"1rem 0.3rem"}} type='dashed' onClick={() => setContent('step2')}>‡∏•‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</Button>
                        <Button style={{margin:"1rem 0rem"}} type='dashed' onClick={() => setContent('stepOver')}>ü§¨</Button>
                    </>
                );
            case 'step2':
                return (
                    <>
                        <h1>‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏Å‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏™‡∏≤‡∏£ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏û‡∏µ‡πà‡∏ä‡∏≠‡∏ö‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô ü§£ü§£ü§£</h1>
                        <center><h2>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡∏≠‡∏±‡∏ô‡∏ô‡∏∂‡∏á</h2></center>
                        <Button style={{margin:"1rem 0.3rem"}} type='dashed' onClick={() => setContent('step3')}>ü§£</Button>
                        <Button style={{margin:"1rem 0rem"}} type='dashed' onClick={() => setContent('step3')}>ü§£ü§£ü§£</Button>
                    </>
                );
            case 'step3':
                return (
                    <>
                        <h1>‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏Å‡πâ‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á‡πÑ‡∏´‡∏°</h1>
                        <center><img src="/tableascii.JPG" width={200} height={200} className="spin"/></center>
                        <Button style={{margin:"1rem 0.3rem"}} type='dashed' onClick={() => setContent('step4')}>‡πÄ‡∏Ñ‡∏¢</Button>
                        <Button style={{margin:"1rem 0rem"}} type='dashed' onClick={() => setContent('step4')}>‡πÄ‡∏Ñ‡∏¢ü§£</Button>
                    </>
                );
            case 'step4':
                return (
                    <>
                        <h1>‡∏ô‡πâ‡∏≠‡∏á‡∏•‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢</h1>
                        <p>‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ</p>
                        <center><img src="/tableascii.JPG" width={200} height={200} className="spin"/></center>
                        <h6>01010000 01010100 01101111 01110000 01010011 01110101 01100100 01001100 01101111 01110010</h6>
                        {error && <Alert message="‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏Å" type="error" showIcon />}
                        <Input 
                            placeholder='‡∏ï‡∏≠‡∏ö‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ' 
                            value={answer} 
                            onChange={(e) => { 
                                setAnswer(e.target.value);
                                setError(false);
                            }} 
                        />
                        <Button style={{margin:"1rem 0rem"}} type='primary' onClick={handle}>‡∏•‡∏≠‡∏á‡∏ï‡∏≠‡∏ö</Button>
                        
                    </>
                );
            case 'stepOver':
                return (
                    <>
                        <h1>‡πÅ‡∏û‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏Å ‡πÑ‡∏õ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏•‡∏¢ ü§£ü§£ü§£</h1>
                        <Link to="/"><Button style={{margin:"1rem 0.3rem"}} type='dashed' >‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö</Button></Link>
                    </>
                );
            case 'stepfinal':
                return (
                    <>
                        <h3>‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠</h3>
                        <h1>‡∏´‡∏ô‡∏¥‡∏ü‡∏ï‡∏∂‡∏Å‡∏Å‡πâ‡∏≤</h1>
                    </>
                );
            default:
                return (
                    <>
                        <h1>‡∏ô‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏Ñ‡∏≥‡πÉ‡∏ö‡∏´‡∏£‡∏≠</h1>
                        <Button style={{margin:"1rem 0.3rem"}} type='dashed' onClick={() => setContent('stepOver')}>‡πÑ‡∏°‡πà‡∏≠‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ</Button>
                        <Button style={{margin:"1rem 0rem"}} type='dashed' onClick={() => setContent('step1')}>‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ</Button>
                    </>
                );
        }
    };

    return (
        <div>
            <audio src="/lobby.mp3" autoPlay loop ref={audioRef} />
            <img src="/helloworld.png" width={90} height={100} className="spin" />
            <div className="content">
                {Content()}
            </div>
            <div style={{ marginTop: '20px' }}>
                <p>‡∏•‡∏î-‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏•‡∏á</p>
                <Slider 
                    min={0} 
                    max={1} 
                    step={0.01} 
                    value={volume} 
                    onChange={handleVolumeChange} 
                    style={{ width: '200px', margin: '0 auto' }} 
                />
            </div>
        </div>
    );
}

export default Playgame;
